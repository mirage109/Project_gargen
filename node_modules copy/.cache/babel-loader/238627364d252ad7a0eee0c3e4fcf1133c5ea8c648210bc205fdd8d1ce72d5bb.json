{"ast":null,"code":"import { fetchBaseQuery, createApi } from \"@reduxjs/toolkit/query/react\";\nexport const sliceApi = createApi({\n  reducerPath: \"productsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3333\"\n  }),\n  endpoints: builder => ({\n    getAllCategories: builder.query({\n      query: () => `/categories/all`\n    }),\n    getCategoryItem: builder.query({\n      query: id => `/categories/${id}`\n    }),\n    getAllProducts: builder.query({\n      query: () => `/products/all`\n    }),\n    getProductItem: builder.query({\n      query: id => `/products/${id}`\n    }),\n    addPhoneNumber: builder.mutation({\n      query: newPhone => ({\n        url: `/sale/send`,\n        method: \"POST\",\n        body: newPhone\n      }),\n      invalidatesTags: [\"PhoneNumber\"]\n    }),\n    addOrder: builder.mutation({\n      query: body => ({\n        url: `/order/send`,\n        method: \"POST\",\n        body\n      }),\n      invalidatesTags: [\"Order\"]\n    })\n  })\n});\nexport const {\n  useGetAllProductsQuery,\n  useGetAllCategoriesQuery,\n  useGetProductItemQuery,\n  useGetCategoryItemQuery,\n  useAddPhoneNumberMutation,\n  useAddOrderMutation\n} = sliceApi;","map":{"version":3,"names":["fetchBaseQuery","createApi","sliceApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getAllCategories","query","getCategoryItem","id","getAllProducts","getProductItem","addPhoneNumber","mutation","newPhone","url","method","body","invalidatesTags","addOrder","useGetAllProductsQuery","useGetAllCategoriesQuery","useGetProductItemQuery","useGetCategoryItemQuery","useAddPhoneNumberMutation","useAddOrderMutation"],"sources":["D:/Project_java/Project_garden/garden/src/redux/sliceApi.js"],"sourcesContent":["import { fetchBaseQuery, createApi } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const sliceApi = createApi({\r\n  reducerPath: \"productsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3333\" }),\r\n  endpoints: (builder) => ({\r\n    getAllCategories: builder.query({\r\n      query: () => `/categories/all`,\r\n    }),\r\n    getCategoryItem: builder.query({\r\n      query: (id) => `/categories/${id}`,\r\n    }),\r\n    getAllProducts: builder.query({\r\n      query: () => `/products/all`,\r\n    }),\r\n    getProductItem: builder.query({\r\n      query: (id) => `/products/${id}`,\r\n    }),\r\n    addPhoneNumber: builder.mutation({\r\n      query: (newPhone) => ({\r\n        url: `/sale/send`,\r\n        method: \"POST\",\r\n        body: newPhone,\r\n      }),\r\n      invalidatesTags: [\"PhoneNumber\"],\r\n    }),\r\n    addOrder: builder.mutation({\r\n      query: (body) => ({\r\n        url: `/order/send`,\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [\"Order\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllProductsQuery,\r\n  useGetAllCategoriesQuery,\r\n  useGetProductItemQuery,\r\n  useGetCategoryItemQuery,\r\n  useAddPhoneNumberMutation,\r\n  useAddOrderMutation,\r\n} = sliceApi;\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,SAAS,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGD,SAAS,CAAC;EAChCE,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAEJ,cAAc,CAAC;IAAEK,OAAO,EAAE;EAAwB,CAAC,CAAC;EAC/DC,SAAS,EAAGC,OAAO,KAAM;IACvBC,gBAAgB,EAAED,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAEA,CAAA,KAAO;IAChB,CAAC,CAAC;IACFC,eAAe,EAAEH,OAAO,CAACE,KAAK,CAAC;MAC7BA,KAAK,EAAGE,EAAE,IAAM,eAAcA,EAAG;IACnC,CAAC,CAAC;IACFC,cAAc,EAAEL,OAAO,CAACE,KAAK,CAAC;MAC5BA,KAAK,EAAEA,CAAA,KAAO;IAChB,CAAC,CAAC;IACFI,cAAc,EAAEN,OAAO,CAACE,KAAK,CAAC;MAC5BA,KAAK,EAAGE,EAAE,IAAM,aAAYA,EAAG;IACjC,CAAC,CAAC;IACFG,cAAc,EAAEP,OAAO,CAACQ,QAAQ,CAAC;MAC/BN,KAAK,EAAGO,QAAQ,KAAM;QACpBC,GAAG,EAAG,YAAW;QACjBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,aAAa;IACjC,CAAC,CAAC;IACFC,QAAQ,EAAEd,OAAO,CAACQ,QAAQ,CAAC;MACzBN,KAAK,EAAGU,IAAI,KAAM;QAChBF,GAAG,EAAG,aAAY;QAClBC,MAAM,EAAE,MAAM;QACdC;MACF,CAAC,CAAC;MACFC,eAAe,EAAE,CAAC,OAAO;IAC3B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXE,sBAAsB;EACtBC,wBAAwB;EACxBC,sBAAsB;EACtBC,uBAAuB;EACvBC,yBAAyB;EACzBC;AACF,CAAC,GAAGzB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}