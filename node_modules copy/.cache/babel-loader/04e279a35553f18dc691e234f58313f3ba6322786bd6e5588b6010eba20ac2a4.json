{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  products: [],\n  totalAmount: 0\n};\nconst basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addToBasket: (state, action) => {\n      const newProduct = action.payload;\n      const existingProduct = state.products.find(product => product.id === newProduct.id);\n      if (existingProduct) {\n        existingProduct.quantity += 1;\n      } else {\n        state.products.push({\n          ...newProduct,\n          quantity: 1\n        });\n      }\n      state.totalAmount += newProduct.price;\n    },\n    removeFromBasket: (state, action) => {\n      const productId = action.payload;\n      const removedProduct = state.products.find(product => product.id === productId);\n      if (removedProduct) {\n        state.totalAmount -= removedProduct.price * removedProduct.quantity;\n        state.products = state.products.filter(product => product.id !== productId);\n      }\n    },\n    updateQuantity: (state, action) => {\n      const {\n        itemId,\n        quantity\n      } = action.payload;\n      const existingProduct = state.products.find(product => product.id === itemId);\n      if (existingProduct) {\n        state.totalAmount += existingProduct.price * (quantity - existingProduct.quantity);\n        existingProduct.quantity = quantity;\n      }\n    }\n  }\n});\nexport const {\n  addToBasket,\n  removeFromBasket,\n  updateQuantity\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","products","totalAmount","basketSlice","name","reducers","addToBasket","state","action","newProduct","payload","existingProduct","find","product","id","quantity","push","price","removeFromBasket","productId","removedProduct","filter","updateQuantity","itemId","actions","reducer"],"sources":["D:/Project_java/Project_garden/garden/src/redux/basketSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  products: [], \r\n  totalAmount: 0,\r\n};\r\n\r\nconst basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState,\r\n  reducers: {\r\n    addToBasket: (state, action) => {\r\n      const newProduct = action.payload;\r\n      const existingProduct = state.products.find(product => product.id === newProduct.id);\r\n\r\n      if (existingProduct) {\r\n        existingProduct.quantity += 1;\r\n      } else {\r\n        state.products.push({ ...newProduct, quantity: 1 });\r\n      }\r\n      state.totalAmount += newProduct.price;\r\n    },\r\n    removeFromBasket: (state, action) => {\r\n      const productId = action.payload;\r\n      const removedProduct = state.products.find(product => product.id === productId);\r\n\r\n      if (removedProduct) {\r\n        state.totalAmount -= removedProduct.price * removedProduct.quantity; \r\n        state.products = state.products.filter(product => product.id !== productId);\r\n      }\r\n    },\r\n    updateQuantity: (state, action) => {\r\n      const { itemId, quantity } = action.payload;\r\n      const existingProduct = state.products.find(product => product.id === itemId);\r\n      \r\n      if (existingProduct) {\r\n        state.totalAmount += existingProduct.price * (quantity - existingProduct.quantity); \r\n        existingProduct.quantity = quantity;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToBasket, removeFromBasket, updateQuantity  } = basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGJ,WAAW,CAAC;EAC9BK,IAAI,EAAE,QAAQ;EACdJ,YAAY;EACZK,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;MACjC,MAAMC,eAAe,GAAGJ,KAAK,CAACN,QAAQ,CAACW,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,UAAU,CAACK,EAAE,CAAC;MAEpF,IAAIH,eAAe,EAAE;QACnBA,eAAe,CAACI,QAAQ,IAAI,CAAC;MAC/B,CAAC,MAAM;QACLR,KAAK,CAACN,QAAQ,CAACe,IAAI,CAAC;UAAE,GAAGP,UAAU;UAAEM,QAAQ,EAAE;QAAE,CAAC,CAAC;MACrD;MACAR,KAAK,CAACL,WAAW,IAAIO,UAAU,CAACQ,KAAK;IACvC,CAAC;IACDC,gBAAgB,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAMW,SAAS,GAAGX,MAAM,CAACE,OAAO;MAChC,MAAMU,cAAc,GAAGb,KAAK,CAACN,QAAQ,CAACW,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKK,SAAS,CAAC;MAE/E,IAAIC,cAAc,EAAE;QAClBb,KAAK,CAACL,WAAW,IAAIkB,cAAc,CAACH,KAAK,GAAGG,cAAc,CAACL,QAAQ;QACnER,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACoB,MAAM,CAACR,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKK,SAAS,CAAC;MAC7E;IACF,CAAC;IACDG,cAAc,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEe,MAAM;QAAER;MAAS,CAAC,GAAGP,MAAM,CAACE,OAAO;MAC3C,MAAMC,eAAe,GAAGJ,KAAK,CAACN,QAAQ,CAACW,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKS,MAAM,CAAC;MAE7E,IAAIZ,eAAe,EAAE;QACnBJ,KAAK,CAACL,WAAW,IAAIS,eAAe,CAACM,KAAK,IAAIF,QAAQ,GAAGJ,eAAe,CAACI,QAAQ,CAAC;QAClFJ,eAAe,CAACI,QAAQ,GAAGA,QAAQ;MACrC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,WAAW;EAAEY,gBAAgB;EAAEI;AAAgB,CAAC,GAAGnB,WAAW,CAACqB,OAAO;AAErF,eAAerB,WAAW,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}